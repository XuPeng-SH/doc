syntax = "proto3";

import "status.proto";
package demo;

enum DataType {
    NULL = 0;
    INT8 = 1;
    INT16 = 2;
    INT32 = 3;
    INT64 = 4;

    STRING = 20;

    BOOL = 30;

    FLOAT = 40;
    HALFFLOAT = 41;
    DOUBLE = 42;

    VECTOR = 100;
    UNKNOWN = 9999;
}

message VectorColumnInfoPB {
    int64 dimension = 1;
    DataType element_type = 2;
}

message ColumnTypePB {
    DataType type = 1;
    VectorColumnInfoPB info = 2;
}

message ColumnSchemaPB {
    uint64 id = 1;
    string name = 2;
    ColumnTypePB type = 3;
}

message TableSchemaPB {
    uint64 id = 1;
    string name = 2;
    ColumnSchemaPB columns = 3;
}

message CreateTableRequestPB {
    uint64 request_id = 1;
    TableSchemaPB schema = 2;
}

message CreateTableResponsePB {
    Status status = 1;
    TableSchemaPB schema = 2;
}

message BinaryVectorValuePB {
    repeated int32 value = 1;
}

message FloatVectorValuePB {
    repeated int32 value = 1;
}

message VectorColumnValuePB {
    oneof value {
        FloatVectorValuePB float_value = 1;
        BinaryVectorValuePB binary_value = 2;
    }
}

message ColumnValuePB {
    oneof value {
        int32 int8_value = 1;
        int32 int16_value = 2;
        int32 int32_value = 3;
        int64 int64_value = 4;
        float float_value = 5;
        double double_value = 6;
        string string_value = 7;
        bool  bool_value = 8;
        VectorColumnValuePB vector_value = 9;
    }
}

message QueryColumnPB {
    string name = 1;
    ColumnValuePB value = 2;
}

message TermQueryPB {
    QueryColumnPB field = 1;
    repeated ColumnValuePB values = 2;
}

enum CompareOperator {
    LT = 0;
    LTE = 1;
    EQ = 2;
    GT = 3;
    GTE = 4;
}

message CompareExprPB {
    CompareOperator operator = 1;
    ColumnValuePB operand = 2;
}

message RangeQueryPB {
    QueryColumnPB field = 1;
    repeated CompareExprPB operand = 2;
}

message InnerLeafQueryPB {
    oneof query {
        TermQueryPB term_query = 1;
        RangeQueryPB range_query = 2;
        /* VectorQueryPB vector_query = 2; */ // TODO
    }
}

message LeafQueryPB {
    InnerLeafQueryPB query = 1;
    float boost = 2;
}

message GeneralQueryPB {
    oneof query {
        LeafQueryPB leaf = 1;
        BinaryQueryPB bin = 2;
    }
}

enum QueryRelation {
    R1 = 0;
    R2 = 1;
    R3 = 2;
    R4 = 3;
}

message BinaryQueryPB {
    GeneralQueryPB left_query = 1;
    GeneralQueryPB right_query = 2;
    QueryRelation relation = 3;
    float boost = 4;
}

message QueryRequestPB {
    uint64 request_id = 1;
    GeneralQueryPB query = 2;
}

message QueryResponsePB {
    Status status = 1;
    uint64 hits = 2;
    repeated int64 ids = 3;
    repeated float score = 4;
    repeated float distance = 5;
}

service DemoService {
    rpc CreateTable(CreateTableRequestPB) returns (CreateTableResponsePB) {}
    rpc Search(QueryRequestPB) returns (QueryResponsePB) {}
}
